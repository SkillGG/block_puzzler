* {
    box-sizing: border-box;
}

@border: 1px solid black;

body {
    padding: 0;
    margin: 0;
    overflow-y: hidden;
}

#page {
    display: flex;
    flex-direction: row;
    width: 100vw;
    height: 100vh;
    justify-content: center;
}

#gameBox {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #333c;
    width: 100%;
    height: 100%;
    border-inline: @border;
    canvas {
        margin-block: auto;
    }
}

#consoleBox {
    width: 100%;
    height: 100%;
    max-height: 100vh;
    background-color: #444e;
    position: relative;
    #consoleHead {
        position: absolute;
        top: 0;
        width: 100%;
        right: 0;
        text-align: center;
        border-top: @border;
        border-bottom: @border;
        font-size: 1.1em;
        background-color: #444;
        padding-right: 5px;
        font-weight: bolder;
        transform: translateY(-1px);
    }
    #clearConsole {
        float: right;
        cursor: pointer;
    }
    #consoleContent {
        overflow-y: scroll;
        padding-top: 25px;
        max-height: 100%;
    }
    canvas {
        user-zoom: fixed;
        touch-action: none;
    }
}

#optionsBox {
    width: 100%;
    background-color: #444e;
    padding-top: 25px;
    div {
        padding-inline: 10px;
    }
    .gameStatValue {
        float: right;
    }
}

@media only screen and (max-width: 820px) {
    #page {
        display: block;
    }
    #consoleBox {
        display: none;
    }
    #optionsBox {
        display: none;
    }
    #gameBox {
        align-items: start;
        canvas {
            display: block;
            width: 100%;
            max-width: 600px;
        }
    }
}

@media only screen and (max-height: 805px) {
    #gameBox {
        canvas {
            max-height: 100vh;
        }
    }
}

.log {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: min-content auto;
    gap: 10px;
    font-size: 0.8em;
    padding: 3px 10px;
    border-bottom: @border;
    .logType {
        &::before {
            content: "[";
        }
        &::after {
            content: "]";
        }
    }
    .logMessage {
        word-break: break-all;
    }
    &[data-type="warn"] {
        color: orange;
    }
    &[data-type="info"] {
        color: black;
    }
    &[data-type="error"] {
        color: red;
    }
}
